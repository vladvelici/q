// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

/*
Package comms is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	AddJobRequest
	AddJobResponse
*/
package comms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// AddJobRequest message containing the script to be added and command line arguments
type AddJobRequest struct {
	Script      string   `protobuf:"bytes,1,opt,name=script" json:"script,omitempty"`
	Workdir     string   `protobuf:"bytes,2,opt,name=workdir" json:"workdir,omitempty"`
	Args        []string `protobuf:"bytes,3,rep,name=args" json:"args,omitempty"`
	Environment []string `protobuf:"bytes,4,rep,name=environment" json:"environment,omitempty"`
}

func (m *AddJobRequest) Reset()                    { *m = AddJobRequest{} }
func (m *AddJobRequest) String() string            { return proto.CompactTextString(m) }
func (*AddJobRequest) ProtoMessage()               {}
func (*AddJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddJobRequest) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *AddJobRequest) GetWorkdir() string {
	if m != nil {
		return m.Workdir
	}
	return ""
}

func (m *AddJobRequest) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *AddJobRequest) GetEnvironment() []string {
	if m != nil {
		return m.Environment
	}
	return nil
}

// AddJobResponse is a message containing the job id and position in queue
type AddJobResponse struct {
	Id            int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	NumJobsBefore int64 `protobuf:"varint,2,opt,name=numJobsBefore" json:"numJobsBefore,omitempty"`
}

func (m *AddJobResponse) Reset()                    { *m = AddJobResponse{} }
func (m *AddJobResponse) String() string            { return proto.CompactTextString(m) }
func (*AddJobResponse) ProtoMessage()               {}
func (*AddJobResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddJobResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AddJobResponse) GetNumJobsBefore() int64 {
	if m != nil {
		return m.NumJobsBefore
	}
	return 0
}

func init() {
	proto.RegisterType((*AddJobRequest)(nil), "comms.AddJobRequest")
	proto.RegisterType((*AddJobResponse)(nil), "comms.AddJobResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Q service

type QClient interface {
	// Add a new job
	AddJob(ctx context.Context, in *AddJobRequest, opts ...grpc.CallOption) (*AddJobResponse, error)
}

type qClient struct {
	cc *grpc.ClientConn
}

func NewQClient(cc *grpc.ClientConn) QClient {
	return &qClient{cc}
}

func (c *qClient) AddJob(ctx context.Context, in *AddJobRequest, opts ...grpc.CallOption) (*AddJobResponse, error) {
	out := new(AddJobResponse)
	err := grpc.Invoke(ctx, "/comms.Q/AddJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Q service

type QServer interface {
	// Add a new job
	AddJob(context.Context, *AddJobRequest) (*AddJobResponse, error)
}

func RegisterQServer(s *grpc.Server, srv QServer) {
	s.RegisterService(&_Q_serviceDesc, srv)
}

func _Q_AddJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QServer).AddJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comms.Q/AddJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QServer).AddJob(ctx, req.(*AddJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Q_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comms.Q",
	HandlerType: (*QServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddJob",
			Handler:    _Q_AddJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x49, 0x5c, 0x82, 0x7a, 0x28, 0x1d, 0x4e, 0x80, 0x2c, 0xa6, 0x28, 0x62, 0xe8, 0x94,
	0x01, 0x06, 0x16, 0x16, 0x18, 0x18, 0xba, 0xe1, 0x7f, 0x40, 0xe2, 0x03, 0x59, 0xc8, 0xbe, 0x70,
	0xe7, 0xb6, 0x7f, 0x1f, 0xc9, 0xa5, 0x12, 0x65, 0xf3, 0xfb, 0x9e, 0xe4, 0x4f, 0xef, 0xa0, 0x55,
	0x92, 0x5d, 0x98, 0x68, 0x98, 0x85, 0x33, 0xe3, 0xf9, 0xc4, 0x31, 0x6a, 0xbf, 0x87, 0xf6, 0xd9,
	0xfb, 0x0d, 0x8f, 0x8e, 0xbe, 0xb7, 0xa4, 0x19, 0x6f, 0xa0, 0xd1, 0x49, 0xc2, 0x9c, 0x6d, 0xd5,
	0x55, 0xeb, 0xa5, 0xfb, 0x4d, 0x68, 0xe1, 0x62, 0xcf, 0xf2, 0xe5, 0x83, 0xd8, 0xba, 0x14, 0xc7,
	0x88, 0x08, 0x8b, 0x77, 0xf9, 0x54, 0x6b, 0x3a, 0xb3, 0x5e, 0xba, 0xf2, 0xc6, 0x0e, 0x2e, 0x29,
	0xed, 0x82, 0x70, 0x8a, 0x94, 0xb2, 0x5d, 0x94, 0xea, 0x2f, 0xea, 0x5f, 0x61, 0x75, 0x14, 0xeb,
	0xcc, 0x49, 0x09, 0x57, 0x50, 0x07, 0x5f, 0xac, 0xc6, 0xd5, 0xc1, 0xe3, 0x1d, 0xb4, 0x69, 0x1b,
	0x37, 0x3c, 0xea, 0x0b, 0x7d, 0xb0, 0x50, 0xf1, 0x1a, 0x77, 0x0a, 0xef, 0x9f, 0xa0, 0x7a, 0xc3,
	0x47, 0x68, 0x0e, 0x9f, 0xe1, 0xd5, 0x50, 0x76, 0x0d, 0x27, 0xa3, 0x6e, 0xaf, 0xff, 0xd1, 0x83,
	0xb1, 0x3f, 0x1b, 0x9b, 0x72, 0x8c, 0x87, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x72, 0xcd, 0xd1,
	0x2a, 0x1d, 0x01, 0x00, 0x00,
}
